//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassLibrary2.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PracticasEntities : DbContext
    {
        public PracticasEntities()
            : base("name=PracticasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<T_CAT_PUESTO> T_CAT_PUESTO { get; set; }
        public virtual DbSet<T_EMPLEADOS> T_EMPLEADOS { get; set; }
    
        public virtual int Eliminar(Nullable<int> id_NumEmp)
        {
            var id_NumEmpParameter = id_NumEmp.HasValue ?
                new ObjectParameter("Id_NumEmp", id_NumEmp) :
                new ObjectParameter("Id_NumEmp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Eliminar", id_NumEmpParameter);
        }
    
        public virtual ObjectResult<ObtenerporId_Result> ObtenerporId(Nullable<int> id_NumEmp)
        {
            var id_NumEmpParameter = id_NumEmp.HasValue ?
                new ObjectParameter("Id_NumEmp", id_NumEmp) :
                new ObjectParameter("Id_NumEmp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerporId_Result>("ObtenerporId", id_NumEmpParameter);
        }
    
        public virtual int sp_Agregar(string nombre, string apellidos, Nullable<int> id_Puesto)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var id_PuestoParameter = id_Puesto.HasValue ?
                new ObjectParameter("Id_Puesto", id_Puesto) :
                new ObjectParameter("Id_Puesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Agregar", nombreParameter, apellidosParameter, id_PuestoParameter);
        }
    
        public virtual int sp_Editar(Nullable<int> id_NumEmp, string nombre, string apellidos, Nullable<int> id_Puesto)
        {
            var id_NumEmpParameter = id_NumEmp.HasValue ?
                new ObjectParameter("Id_NumEmp", id_NumEmp) :
                new ObjectParameter("Id_NumEmp", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var id_PuestoParameter = id_Puesto.HasValue ?
                new ObjectParameter("Id_Puesto", id_Puesto) :
                new ObjectParameter("Id_Puesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Editar", id_NumEmpParameter, nombreParameter, apellidosParameter, id_PuestoParameter);
        }
    
        public virtual ObjectResult<sp_Obtener_Result> sp_Obtener()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Obtener_Result>("sp_Obtener");
        }
    
        public virtual ObjectResult<sp_ObtenerPuesto_Result> sp_ObtenerPuesto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerPuesto_Result>("sp_ObtenerPuesto");
        }
    }
}
